knitr::opts_chunk$set(echo = TRUE)
#Ejecute las siguientes tres líneas de código para crear las variables
x = c(1, 2, 4, 7, 9, 0)
y = 4
z = c(0.5, 2, 3, 5, 1, 0)
# Escriba en el siguiente espacio la operación suma entre "x" y "y", y asígnelo a resultado_suma (1 línea de código)
resultado_suma <-
# Escriba en el siguiente espacio la operación multiplicación entre "x" y "z", y asígnelo a resultado_multiplicacion (1 línea de código)
resultado_multiplicacion <-
# Escriba en el siguiente espacio la operación multiplicación negativa a "z", y asígnelo a resultado_negativo (1 línea de código)
resultado_negativo <-
# Escriba en el siguiente espacio la operación de raíz cuadrada "y", y asígnelo a resultado_raiz (1 línea de código)
resultado_raiz <-
# Escriba en el siguiente espacio la operación lógica de igualdad entre "x" y "z", y asígnelo a resultado_igualdad (1 línea de código)
resultado_igualdad <-
# Escriba en el siguiente espacio la operación lógica de diferencia entre "x" y "y", y asígnelo a resultado_igualdad (1 línea de código)
resultado_diferencia <-
# --------------------------- #
# Ahora ejecute las siguientes líneas de código que le permitirán observar los resultados de sus operaciones.
print("Resultado Suma")
resultado_suma
print("Resultado multiplicación")
resultado_multiplicacion
print("Resultado negativo")
resultado_negativo
print("Resultado raíz cuadrada")
resultado_raiz
print("Resultado de operación lógica: igualdad")
resultado_igualdad
print("Resultado de operación lógica: diferencia")
resultado_diferencia
x = c(1, 2, 4, 7, 9, 0)
y = 4
z = c(0.5, 2, 3, 5, 1, 0)
x = c(1, 2, 4, 7, 9, 0)
y = 4
z = c(0.5, 2, 3, 5, 1, 0)
#Ejecute las siguientes tres líneas de código para crear las variables
x = c(1, 2, 4, 7, 9, 0)
y = 4
z = c(0.5, 2, 3, 5, 1, 0)
# Escriba en el siguiente espacio la operación suma entre "x" y "y", y asígnelo a resultado_suma (1 línea de código)
resultado_suma <- x+y
# Escriba en el siguiente espacio la operación multiplicación entre "x" y "z", y asígnelo a resultado_multiplicacion (1 línea de código)
resultado_multiplicacion <- x*z
# Escriba en el siguiente espacio la operación multiplicación negativa a "z", y asígnelo a resultado_negativo (1 línea de código)
resultado_negativo <- -z
# Escriba en el siguiente espacio la operación de raíz cuadrada "y", y asígnelo a resultado_raiz (1 línea de código)
resultado_raiz <- sqrt(y)
# Escriba en el siguiente espacio la operación lógica de igualdad entre "x" y "z", y asígnelo a resultado_igualdad (1 línea de código)
resultado_igualdad <- x==z
# Escriba en el siguiente espacio la operación lógica de diferencia entre "x" y "y", y asígnelo a resultado_igualdad (1 línea de código)
resultado_diferencia <- x!=y
# --------------------------- #
# Ahora ejecute las siguientes líneas de código que le permitirán observar los resultados de sus operaciones.
print("Resultado Suma")
resultado_suma
print("Resultado multiplicación")
resultado_multiplicacion
print("Resultado negativo")
resultado_negativo
print("Resultado raíz cuadrada")
resultado_raiz
print("Resultado de operación lógica: igualdad")
resultado_igualdad
print("Resultado de operación lógica: diferencia")
resultado_diferencia
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
install.packages("nycflights13")
#install.packages("tidyverse")
#install.packages("nycflights13")
#install.packages("xts")
install.packages("PerformanceAnalytics")
anova(reg2,reg1)
data<-read.csv(file.choose())
head(data,3)
D<-year>=1991
data$D<-as.numeric(D)
data[29:36,]
reg1<-lm(log_PIB_Col~D+log_PIB_USA+D*log_PIB_USA,data = data)
reg2<-lm(log_PIB_Col~log_PIB_USA,data=data)
anova(reg2,reg1)
data<-read.csv(file.choose())
attach(data)
D<-year>=1991
data$D<-as.numeric(D)
data[29:36,]
reg1<-lm(log_PIB_Col~D+log_PIB_USA+D*log_PIB_USA,data = data)
reg2<-lm(log_PIB_Col~log_PIB_USA,data=data)
anova(reg2,reg1)
data<-read.csv(file.choose())
plot(data$log_PIB_USA, data$log_PIB_Col)
D <- data$year >= 1991
data$D <- as.numeric(D)
head(data)
tail(data)
data[29:36,]
res1<-lm(formula = log_PIB_Col  ~  D + log_PIB_USA , data = data)
res2<-lm(formula = log_PIB_Col  ~  D + log_PIB_USA + D * log_PIB_USA, data = data)
summary(res2)
anova(res2, res1)
res1<-lm(log_PIB_Col  ~  D + log_PIB_USA , data = data)
res2<-lm(log_PIB_Col  ~  D + log_PIB_USA + D * log_PIB_USA, data = data)
anova(res2, res1)
res1<-lm(log_PIB_Col  ~  log_PIB_USA , data = data)
anova(res2, res1)
library(readxl)
setwd("F:/GitHub/Maestría en Ciencia de Datos/Análisis Cuantitativo")
data <- read_excel(file.choose())
head(data)
View(data)
data <- read_excel(file.choose())
head(data)
str(data)
attach(data)
plot(Sexo,Salario)
plot(Sexo,Salario)
D <- Sexo='M'
plot(D,Salario)
data$D <- as.numeric(D)
plot(D,Salario)
View(data)
head(data)
head(D)
D <- Sexo='M'
D <- Sexo=='M'
head(D)
data$D <- as.numeric(D)
head(data)
plot(D,Salario)
plot(Salario,D)
res2 <- lm(Salario ~ D+Educación+D*Educación+Experiencia+D*Experiencia+data$`Años Compañía`+
D*data$`Años Compañía`,data=data)
res1 <- lm(Salario ~ Educación+Experiencia+data$`Años Compañía`,data=data)
summary(res1)
summary(res2)
anova(res1,res2)
summary(res2)
res1 <- lm(Salario ~ Educación+Experiencia+data$`Años Compañía`,data=data)
summary(res1)
summary(res1)
D <- Sexo=='M'
D <- Sexo=='F'
data$D <- as.numeric(D)
plot(Salario,D)
res1 <- lm(Salario ~ Educación+Experiencia+data$`Años Compañía`,data=data)
res2 <- lm(Salario ~ D+Educación+D*Educación+Experiencia+D*Experiencia+data$`Años Compañía`+
D*data$`Años Compañía`,data=data)
anova(res1,res2)
res1 <- lm(Salario ~ Educación+Experiencia+data$`Años Compañía`,data=data)
summary(res1)
summary(res2)
res2 <- lm(Salario ~ D+Educación+D*Educación+Experiencia+D*Experiencia+data$`Años Compañía`+
D*data$`Años Compañía`,data=data)
res3<-lm(Salario ~ D, data=data )
summary(res3)
res1 <- lm(Salario ~ Educación+Experiencia+data$`Años Compañía`,data=data)
summary(res1)
res2 <- lm(Salario ~ D+Educación+D*Educación+Experiencia+D*Experiencia+data$`Años Compañía`+
D*data$`Años Compañía`,data=data)
summary(res2)
anova(res1,res2)
summary(res2)
res1 <- lm(Salario ~ Educación+Experiencia+data$`Años Compañía`,data=data)
summary(res2)
summary(res1)
summary(res2)
##Podemos rechazar con 90% de confianza que el 1 sea mejor que el 2.
remove(res3)
head(D)
View(data)
summary(res1)
View(data)
View(data)
summary(res2)
View(data)
summary(res2)
anova(res1,res2)
summary(res1)
summary(res2)
anova(res1,res2)
